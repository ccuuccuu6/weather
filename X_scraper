#!/usr/bin/env python3
import argparse
import sys
import requests

# ─── CONFIG ────────────────────────────────────────────────────────────────
# Paste your token here (keep this file secure!)
BEARER_TOKEN = "AAAAAAAAAAAAAAAAAAAAABQx1wEAAAAAlYJhxOp18vuHglsxBBRvhNorcgA%3DMpqhdRP542F8qla3rJctGsXHizPalo6QX7iyJw3oyXVKTzQTyB"
if not BEARER_TOKEN:
    sys.exit("Error: Please set your BEARER_TOKEN in the script.")

URL = "https://api.twitter.com/2/tweets/counts/recent"

# ─── FUNCTIONS ─────────────────────────────────────────────────────────────

def fetch_recent_counts(query: str, granularity: str = "day") -> dict:
    """
    Fetch recent tweet counts for the given query.
    - query: your search string (e.g. "#boycottdove")
    - granularity: "day" | "hour" | "minute"
    Returns the parsed JSON as a dict.
    """
    headers = {"Authorization": f"Bearer {BEARER_TOKEN}"}
    params  = {"query": query, "granularity": granularity}
    resp    = requests.get(URL, headers=headers, params=params)
    resp.raise_for_status()
    return resp.json()

def print_counts(data: dict) -> None:
    """
    Given the JSON from fetch_recent_counts, print each bucket:
    YYYY-MM-DD → tweet_count
    """
    for bucket in data.get("data", []):
        day   = bucket["start"][:10]    # e.g. "2025-05-16"
        count = bucket["tweet_count"]
        print(f"{day}: {count}")

# ─── MAIN (with argparse that ignores unknown flags) ──────────────────────

def main():
    parser = argparse.ArgumentParser(
        description="Fetch daily tweet counts for a query",
        add_help=True
    )
    parser.add_argument(
        "query",
        nargs="?",
        default="#boycottdove",
        help="Hashtag or query string to count (default: #boycottdove)"
    )
    # parse_known_args will skip over any ipython/Jupyter flags
    args, _unknown = parser.parse_known_args()

    print(f"Fetching daily counts for: {args.query!r}\n")
    data = fetch_recent_counts(args.query)
    print_counts(data)

if __name__ == "__main__":
    main()
